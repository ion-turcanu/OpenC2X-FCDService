// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BasicVehicleLowFreqContainer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BasicVehicleLowFreqContainer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace its {

namespace {

const ::google::protobuf::Descriptor* BasicVehicleLowFreqContainer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicVehicleLowFreqContainer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BasicVehicleLowFreqContainer_2eproto() {
  protobuf_AddDesc_BasicVehicleLowFreqContainer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BasicVehicleLowFreqContainer.proto");
  GOOGLE_CHECK(file != NULL);
  BasicVehicleLowFreqContainer_descriptor_ = file->message_type(0);
  static const int BasicVehicleLowFreqContainer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicVehicleLowFreqContainer, vehiclerole_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicVehicleLowFreqContainer, exteriorlights_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicVehicleLowFreqContainer, pathpoint_),
  };
  BasicVehicleLowFreqContainer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BasicVehicleLowFreqContainer_descriptor_,
      BasicVehicleLowFreqContainer::default_instance_,
      BasicVehicleLowFreqContainer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicVehicleLowFreqContainer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicVehicleLowFreqContainer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BasicVehicleLowFreqContainer));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BasicVehicleLowFreqContainer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BasicVehicleLowFreqContainer_descriptor_, &BasicVehicleLowFreqContainer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BasicVehicleLowFreqContainer_2eproto() {
  delete BasicVehicleLowFreqContainer::default_instance_;
  delete BasicVehicleLowFreqContainer_reflection_;
}

void protobuf_AddDesc_BasicVehicleLowFreqContainer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::its::protobuf_AddDesc_PathPoint_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"BasicVehicleLowFreqContainer.proto\022\003it"
    "s\032\017PathPoint.proto\"n\n\034BasicVehicleLowFre"
    "qContainer\022\023\n\013vehicleRole\030\001 \002(\003\022\026\n\016exter"
    "iorLights\030\002 \002(\003\022!\n\tpathPoint\030\003 \003(\0132\016.its"
    ".PathPoint", 170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BasicVehicleLowFreqContainer.proto", &protobuf_RegisterTypes);
  BasicVehicleLowFreqContainer::default_instance_ = new BasicVehicleLowFreqContainer();
  BasicVehicleLowFreqContainer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BasicVehicleLowFreqContainer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BasicVehicleLowFreqContainer_2eproto {
  StaticDescriptorInitializer_BasicVehicleLowFreqContainer_2eproto() {
    protobuf_AddDesc_BasicVehicleLowFreqContainer_2eproto();
  }
} static_descriptor_initializer_BasicVehicleLowFreqContainer_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BasicVehicleLowFreqContainer::kVehicleRoleFieldNumber;
const int BasicVehicleLowFreqContainer::kExteriorLightsFieldNumber;
const int BasicVehicleLowFreqContainer::kPathPointFieldNumber;
#endif  // !_MSC_VER

BasicVehicleLowFreqContainer::BasicVehicleLowFreqContainer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:its.BasicVehicleLowFreqContainer)
}

void BasicVehicleLowFreqContainer::InitAsDefaultInstance() {
}

BasicVehicleLowFreqContainer::BasicVehicleLowFreqContainer(const BasicVehicleLowFreqContainer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:its.BasicVehicleLowFreqContainer)
}

void BasicVehicleLowFreqContainer::SharedCtor() {
  _cached_size_ = 0;
  vehiclerole_ = GOOGLE_LONGLONG(0);
  exteriorlights_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicVehicleLowFreqContainer::~BasicVehicleLowFreqContainer() {
  // @@protoc_insertion_point(destructor:its.BasicVehicleLowFreqContainer)
  SharedDtor();
}

void BasicVehicleLowFreqContainer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BasicVehicleLowFreqContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicVehicleLowFreqContainer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicVehicleLowFreqContainer_descriptor_;
}

const BasicVehicleLowFreqContainer& BasicVehicleLowFreqContainer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BasicVehicleLowFreqContainer_2eproto();
  return *default_instance_;
}

BasicVehicleLowFreqContainer* BasicVehicleLowFreqContainer::default_instance_ = NULL;

BasicVehicleLowFreqContainer* BasicVehicleLowFreqContainer::New() const {
  return new BasicVehicleLowFreqContainer;
}

void BasicVehicleLowFreqContainer::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<BasicVehicleLowFreqContainer*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(vehiclerole_, exteriorlights_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  pathpoint_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BasicVehicleLowFreqContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:its.BasicVehicleLowFreqContainer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 vehicleRole = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vehiclerole_)));
          set_has_vehiclerole();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_exteriorLights;
        break;
      }

      // required int64 exteriorLights = 2;
      case 2: {
        if (tag == 16) {
         parse_exteriorLights:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exteriorlights_)));
          set_has_exteriorlights();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pathPoint;
        break;
      }

      // repeated .its.PathPoint pathPoint = 3;
      case 3: {
        if (tag == 26) {
         parse_pathPoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pathpoint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pathPoint;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:its.BasicVehicleLowFreqContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:its.BasicVehicleLowFreqContainer)
  return false;
#undef DO_
}

void BasicVehicleLowFreqContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:its.BasicVehicleLowFreqContainer)
  // required int64 vehicleRole = 1;
  if (has_vehiclerole()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->vehiclerole(), output);
  }

  // required int64 exteriorLights = 2;
  if (has_exteriorlights()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->exteriorlights(), output);
  }

  // repeated .its.PathPoint pathPoint = 3;
  for (int i = 0; i < this->pathpoint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pathpoint(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:its.BasicVehicleLowFreqContainer)
}

::google::protobuf::uint8* BasicVehicleLowFreqContainer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:its.BasicVehicleLowFreqContainer)
  // required int64 vehicleRole = 1;
  if (has_vehiclerole()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->vehiclerole(), target);
  }

  // required int64 exteriorLights = 2;
  if (has_exteriorlights()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->exteriorlights(), target);
  }

  // repeated .its.PathPoint pathPoint = 3;
  for (int i = 0; i < this->pathpoint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->pathpoint(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:its.BasicVehicleLowFreqContainer)
  return target;
}

int BasicVehicleLowFreqContainer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 vehicleRole = 1;
    if (has_vehiclerole()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->vehiclerole());
    }

    // required int64 exteriorLights = 2;
    if (has_exteriorlights()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->exteriorlights());
    }

  }
  // repeated .its.PathPoint pathPoint = 3;
  total_size += 1 * this->pathpoint_size();
  for (int i = 0; i < this->pathpoint_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pathpoint(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicVehicleLowFreqContainer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BasicVehicleLowFreqContainer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BasicVehicleLowFreqContainer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BasicVehicleLowFreqContainer::MergeFrom(const BasicVehicleLowFreqContainer& from) {
  GOOGLE_CHECK_NE(&from, this);
  pathpoint_.MergeFrom(from.pathpoint_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vehiclerole()) {
      set_vehiclerole(from.vehiclerole());
    }
    if (from.has_exteriorlights()) {
      set_exteriorlights(from.exteriorlights());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BasicVehicleLowFreqContainer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicVehicleLowFreqContainer::CopyFrom(const BasicVehicleLowFreqContainer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicVehicleLowFreqContainer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->pathpoint())) return false;
  return true;
}

void BasicVehicleLowFreqContainer::Swap(BasicVehicleLowFreqContainer* other) {
  if (other != this) {
    std::swap(vehiclerole_, other->vehiclerole_);
    std::swap(exteriorlights_, other->exteriorlights_);
    pathpoint_.Swap(&other->pathpoint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BasicVehicleLowFreqContainer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicVehicleLowFreqContainer_descriptor_;
  metadata.reflection = BasicVehicleLowFreqContainer_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace its

// @@protoc_insertion_point(global_scope)
