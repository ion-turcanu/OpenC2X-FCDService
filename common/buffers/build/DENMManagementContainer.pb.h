// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DENMManagementContainer.proto

#ifndef PROTOBUF_DENMManagementContainer_2eproto__INCLUDED
#define PROTOBUF_DENMManagementContainer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace its {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DENMManagementContainer_2eproto();
void protobuf_AssignDesc_DENMManagementContainer_2eproto();
void protobuf_ShutdownFile_DENMManagementContainer_2eproto();

class DENMManagementContainer;

// ===================================================================

class DENMManagementContainer : public ::google::protobuf::Message {
 public:
  DENMManagementContainer();
  virtual ~DENMManagementContainer();

  DENMManagementContainer(const DENMManagementContainer& from);

  inline DENMManagementContainer& operator=(const DENMManagementContainer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DENMManagementContainer& default_instance();

  void Swap(DENMManagementContainer* other);

  // implements Message ----------------------------------------------

  DENMManagementContainer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DENMManagementContainer& from);
  void MergeFrom(const DENMManagementContainer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 stationID = 1;
  inline bool has_stationid() const;
  inline void clear_stationid();
  static const int kStationIDFieldNumber = 1;
  inline ::google::protobuf::uint64 stationid() const;
  inline void set_stationid(::google::protobuf::uint64 value);

  // required int64 sequenceNumber = 2;
  inline bool has_sequencenumber() const;
  inline void clear_sequencenumber();
  static const int kSequenceNumberFieldNumber = 2;
  inline ::google::protobuf::int64 sequencenumber() const;
  inline void set_sequencenumber(::google::protobuf::int64 value);

  // optional int64 detectionTime = 3;
  inline bool has_detectiontime() const;
  inline void clear_detectiontime();
  static const int kDetectionTimeFieldNumber = 3;
  inline ::google::protobuf::int64 detectiontime() const;
  inline void set_detectiontime(::google::protobuf::int64 value);

  // optional int64 referenceTime = 4;
  inline bool has_referencetime() const;
  inline void clear_referencetime();
  static const int kReferenceTimeFieldNumber = 4;
  inline ::google::protobuf::int64 referencetime() const;
  inline void set_referencetime(::google::protobuf::int64 value);

  // required int64 latitude = 5;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 5;
  inline ::google::protobuf::int64 latitude() const;
  inline void set_latitude(::google::protobuf::int64 value);

  // required int64 longitude = 6;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 6;
  inline ::google::protobuf::int64 longitude() const;
  inline void set_longitude(::google::protobuf::int64 value);

  // required int64 semiMajorConfidence = 7;
  inline bool has_semimajorconfidence() const;
  inline void clear_semimajorconfidence();
  static const int kSemiMajorConfidenceFieldNumber = 7;
  inline ::google::protobuf::int64 semimajorconfidence() const;
  inline void set_semimajorconfidence(::google::protobuf::int64 value);

  // required int64 semiMinorConfidence = 8;
  inline bool has_semiminorconfidence() const;
  inline void clear_semiminorconfidence();
  static const int kSemiMinorConfidenceFieldNumber = 8;
  inline ::google::protobuf::int64 semiminorconfidence() const;
  inline void set_semiminorconfidence(::google::protobuf::int64 value);

  // required int64 semiMajorOrientation = 9;
  inline bool has_semimajororientation() const;
  inline void clear_semimajororientation();
  static const int kSemiMajorOrientationFieldNumber = 9;
  inline ::google::protobuf::int64 semimajororientation() const;
  inline void set_semimajororientation(::google::protobuf::int64 value);

  // required int64 altitude = 10;
  inline bool has_altitude() const;
  inline void clear_altitude();
  static const int kAltitudeFieldNumber = 10;
  inline ::google::protobuf::int64 altitude() const;
  inline void set_altitude(::google::protobuf::int64 value);

  // required int64 altitudeConfidence = 11;
  inline bool has_altitudeconfidence() const;
  inline void clear_altitudeconfidence();
  static const int kAltitudeConfidenceFieldNumber = 11;
  inline ::google::protobuf::int64 altitudeconfidence() const;
  inline void set_altitudeconfidence(::google::protobuf::int64 value);

  // optional int64 validityDuration = 12;
  inline bool has_validityduration() const;
  inline void clear_validityduration();
  static const int kValidityDurationFieldNumber = 12;
  inline ::google::protobuf::int64 validityduration() const;
  inline void set_validityduration(::google::protobuf::int64 value);

  // required int64 stationType = 13;
  inline bool has_stationtype() const;
  inline void clear_stationtype();
  static const int kStationTypeFieldNumber = 13;
  inline ::google::protobuf::int64 stationtype() const;
  inline void set_stationtype(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:its.DENMManagementContainer)
 private:
  inline void set_has_stationid();
  inline void clear_has_stationid();
  inline void set_has_sequencenumber();
  inline void clear_has_sequencenumber();
  inline void set_has_detectiontime();
  inline void clear_has_detectiontime();
  inline void set_has_referencetime();
  inline void clear_has_referencetime();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_semimajorconfidence();
  inline void clear_has_semimajorconfidence();
  inline void set_has_semiminorconfidence();
  inline void clear_has_semiminorconfidence();
  inline void set_has_semimajororientation();
  inline void clear_has_semimajororientation();
  inline void set_has_altitude();
  inline void clear_has_altitude();
  inline void set_has_altitudeconfidence();
  inline void clear_has_altitudeconfidence();
  inline void set_has_validityduration();
  inline void clear_has_validityduration();
  inline void set_has_stationtype();
  inline void clear_has_stationtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 stationid_;
  ::google::protobuf::int64 sequencenumber_;
  ::google::protobuf::int64 detectiontime_;
  ::google::protobuf::int64 referencetime_;
  ::google::protobuf::int64 latitude_;
  ::google::protobuf::int64 longitude_;
  ::google::protobuf::int64 semimajorconfidence_;
  ::google::protobuf::int64 semiminorconfidence_;
  ::google::protobuf::int64 semimajororientation_;
  ::google::protobuf::int64 altitude_;
  ::google::protobuf::int64 altitudeconfidence_;
  ::google::protobuf::int64 validityduration_;
  ::google::protobuf::int64 stationtype_;
  friend void  protobuf_AddDesc_DENMManagementContainer_2eproto();
  friend void protobuf_AssignDesc_DENMManagementContainer_2eproto();
  friend void protobuf_ShutdownFile_DENMManagementContainer_2eproto();

  void InitAsDefaultInstance();
  static DENMManagementContainer* default_instance_;
};
// ===================================================================


// ===================================================================

// DENMManagementContainer

// required uint64 stationID = 1;
inline bool DENMManagementContainer::has_stationid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DENMManagementContainer::set_has_stationid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DENMManagementContainer::clear_has_stationid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DENMManagementContainer::clear_stationid() {
  stationid_ = GOOGLE_ULONGLONG(0);
  clear_has_stationid();
}
inline ::google::protobuf::uint64 DENMManagementContainer::stationid() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.stationID)
  return stationid_;
}
inline void DENMManagementContainer::set_stationid(::google::protobuf::uint64 value) {
  set_has_stationid();
  stationid_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.stationID)
}

// required int64 sequenceNumber = 2;
inline bool DENMManagementContainer::has_sequencenumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DENMManagementContainer::set_has_sequencenumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DENMManagementContainer::clear_has_sequencenumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DENMManagementContainer::clear_sequencenumber() {
  sequencenumber_ = GOOGLE_LONGLONG(0);
  clear_has_sequencenumber();
}
inline ::google::protobuf::int64 DENMManagementContainer::sequencenumber() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.sequenceNumber)
  return sequencenumber_;
}
inline void DENMManagementContainer::set_sequencenumber(::google::protobuf::int64 value) {
  set_has_sequencenumber();
  sequencenumber_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.sequenceNumber)
}

// optional int64 detectionTime = 3;
inline bool DENMManagementContainer::has_detectiontime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DENMManagementContainer::set_has_detectiontime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DENMManagementContainer::clear_has_detectiontime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DENMManagementContainer::clear_detectiontime() {
  detectiontime_ = GOOGLE_LONGLONG(0);
  clear_has_detectiontime();
}
inline ::google::protobuf::int64 DENMManagementContainer::detectiontime() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.detectionTime)
  return detectiontime_;
}
inline void DENMManagementContainer::set_detectiontime(::google::protobuf::int64 value) {
  set_has_detectiontime();
  detectiontime_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.detectionTime)
}

// optional int64 referenceTime = 4;
inline bool DENMManagementContainer::has_referencetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DENMManagementContainer::set_has_referencetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DENMManagementContainer::clear_has_referencetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DENMManagementContainer::clear_referencetime() {
  referencetime_ = GOOGLE_LONGLONG(0);
  clear_has_referencetime();
}
inline ::google::protobuf::int64 DENMManagementContainer::referencetime() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.referenceTime)
  return referencetime_;
}
inline void DENMManagementContainer::set_referencetime(::google::protobuf::int64 value) {
  set_has_referencetime();
  referencetime_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.referenceTime)
}

// required int64 latitude = 5;
inline bool DENMManagementContainer::has_latitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DENMManagementContainer::set_has_latitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DENMManagementContainer::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DENMManagementContainer::clear_latitude() {
  latitude_ = GOOGLE_LONGLONG(0);
  clear_has_latitude();
}
inline ::google::protobuf::int64 DENMManagementContainer::latitude() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.latitude)
  return latitude_;
}
inline void DENMManagementContainer::set_latitude(::google::protobuf::int64 value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.latitude)
}

// required int64 longitude = 6;
inline bool DENMManagementContainer::has_longitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DENMManagementContainer::set_has_longitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DENMManagementContainer::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DENMManagementContainer::clear_longitude() {
  longitude_ = GOOGLE_LONGLONG(0);
  clear_has_longitude();
}
inline ::google::protobuf::int64 DENMManagementContainer::longitude() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.longitude)
  return longitude_;
}
inline void DENMManagementContainer::set_longitude(::google::protobuf::int64 value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.longitude)
}

// required int64 semiMajorConfidence = 7;
inline bool DENMManagementContainer::has_semimajorconfidence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DENMManagementContainer::set_has_semimajorconfidence() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DENMManagementContainer::clear_has_semimajorconfidence() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DENMManagementContainer::clear_semimajorconfidence() {
  semimajorconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_semimajorconfidence();
}
inline ::google::protobuf::int64 DENMManagementContainer::semimajorconfidence() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.semiMajorConfidence)
  return semimajorconfidence_;
}
inline void DENMManagementContainer::set_semimajorconfidence(::google::protobuf::int64 value) {
  set_has_semimajorconfidence();
  semimajorconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.semiMajorConfidence)
}

// required int64 semiMinorConfidence = 8;
inline bool DENMManagementContainer::has_semiminorconfidence() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DENMManagementContainer::set_has_semiminorconfidence() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DENMManagementContainer::clear_has_semiminorconfidence() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DENMManagementContainer::clear_semiminorconfidence() {
  semiminorconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_semiminorconfidence();
}
inline ::google::protobuf::int64 DENMManagementContainer::semiminorconfidence() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.semiMinorConfidence)
  return semiminorconfidence_;
}
inline void DENMManagementContainer::set_semiminorconfidence(::google::protobuf::int64 value) {
  set_has_semiminorconfidence();
  semiminorconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.semiMinorConfidence)
}

// required int64 semiMajorOrientation = 9;
inline bool DENMManagementContainer::has_semimajororientation() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DENMManagementContainer::set_has_semimajororientation() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DENMManagementContainer::clear_has_semimajororientation() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DENMManagementContainer::clear_semimajororientation() {
  semimajororientation_ = GOOGLE_LONGLONG(0);
  clear_has_semimajororientation();
}
inline ::google::protobuf::int64 DENMManagementContainer::semimajororientation() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.semiMajorOrientation)
  return semimajororientation_;
}
inline void DENMManagementContainer::set_semimajororientation(::google::protobuf::int64 value) {
  set_has_semimajororientation();
  semimajororientation_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.semiMajorOrientation)
}

// required int64 altitude = 10;
inline bool DENMManagementContainer::has_altitude() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DENMManagementContainer::set_has_altitude() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DENMManagementContainer::clear_has_altitude() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DENMManagementContainer::clear_altitude() {
  altitude_ = GOOGLE_LONGLONG(0);
  clear_has_altitude();
}
inline ::google::protobuf::int64 DENMManagementContainer::altitude() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.altitude)
  return altitude_;
}
inline void DENMManagementContainer::set_altitude(::google::protobuf::int64 value) {
  set_has_altitude();
  altitude_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.altitude)
}

// required int64 altitudeConfidence = 11;
inline bool DENMManagementContainer::has_altitudeconfidence() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DENMManagementContainer::set_has_altitudeconfidence() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DENMManagementContainer::clear_has_altitudeconfidence() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DENMManagementContainer::clear_altitudeconfidence() {
  altitudeconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_altitudeconfidence();
}
inline ::google::protobuf::int64 DENMManagementContainer::altitudeconfidence() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.altitudeConfidence)
  return altitudeconfidence_;
}
inline void DENMManagementContainer::set_altitudeconfidence(::google::protobuf::int64 value) {
  set_has_altitudeconfidence();
  altitudeconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.altitudeConfidence)
}

// optional int64 validityDuration = 12;
inline bool DENMManagementContainer::has_validityduration() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DENMManagementContainer::set_has_validityduration() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DENMManagementContainer::clear_has_validityduration() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DENMManagementContainer::clear_validityduration() {
  validityduration_ = GOOGLE_LONGLONG(0);
  clear_has_validityduration();
}
inline ::google::protobuf::int64 DENMManagementContainer::validityduration() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.validityDuration)
  return validityduration_;
}
inline void DENMManagementContainer::set_validityduration(::google::protobuf::int64 value) {
  set_has_validityduration();
  validityduration_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.validityDuration)
}

// required int64 stationType = 13;
inline bool DENMManagementContainer::has_stationtype() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void DENMManagementContainer::set_has_stationtype() {
  _has_bits_[0] |= 0x00001000u;
}
inline void DENMManagementContainer::clear_has_stationtype() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void DENMManagementContainer::clear_stationtype() {
  stationtype_ = GOOGLE_LONGLONG(0);
  clear_has_stationtype();
}
inline ::google::protobuf::int64 DENMManagementContainer::stationtype() const {
  // @@protoc_insertion_point(field_get:its.DENMManagementContainer.stationType)
  return stationtype_;
}
inline void DENMManagementContainer::set_stationtype(::google::protobuf::int64 value) {
  set_has_stationtype();
  stationtype_ = value;
  // @@protoc_insertion_point(field_set:its.DENMManagementContainer.stationType)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace its

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DENMManagementContainer_2eproto__INCLUDED
