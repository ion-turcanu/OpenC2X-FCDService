// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RsuHighFreqContainer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RsuHighFreqContainer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace its {

namespace {

const ::google::protobuf::Descriptor* RsuHighFreqContainer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RsuHighFreqContainer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RsuHighFreqContainer_2eproto() {
  protobuf_AddDesc_RsuHighFreqContainer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RsuHighFreqContainer.proto");
  GOOGLE_CHECK(file != NULL);
  RsuHighFreqContainer_descriptor_ = file->message_type(0);
  static const int RsuHighFreqContainer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsuHighFreqContainer, protectedcommzone_),
  };
  RsuHighFreqContainer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RsuHighFreqContainer_descriptor_,
      RsuHighFreqContainer::default_instance_,
      RsuHighFreqContainer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsuHighFreqContainer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RsuHighFreqContainer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RsuHighFreqContainer));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RsuHighFreqContainer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RsuHighFreqContainer_descriptor_, &RsuHighFreqContainer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RsuHighFreqContainer_2eproto() {
  delete RsuHighFreqContainer::default_instance_;
  delete RsuHighFreqContainer_reflection_;
}

void protobuf_AddDesc_RsuHighFreqContainer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::its::protobuf_AddDesc_ProtectedCommunicationZone_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032RsuHighFreqContainer.proto\022\003its\032 Prote"
    "ctedCommunicationZone.proto\"R\n\024RsuHighFr"
    "eqContainer\022:\n\021protectedCommZone\030\001 \003(\0132\037"
    ".its.ProtectedCommunicationZone", 151);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RsuHighFreqContainer.proto", &protobuf_RegisterTypes);
  RsuHighFreqContainer::default_instance_ = new RsuHighFreqContainer();
  RsuHighFreqContainer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RsuHighFreqContainer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RsuHighFreqContainer_2eproto {
  StaticDescriptorInitializer_RsuHighFreqContainer_2eproto() {
    protobuf_AddDesc_RsuHighFreqContainer_2eproto();
  }
} static_descriptor_initializer_RsuHighFreqContainer_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RsuHighFreqContainer::kProtectedCommZoneFieldNumber;
#endif  // !_MSC_VER

RsuHighFreqContainer::RsuHighFreqContainer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:its.RsuHighFreqContainer)
}

void RsuHighFreqContainer::InitAsDefaultInstance() {
}

RsuHighFreqContainer::RsuHighFreqContainer(const RsuHighFreqContainer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:its.RsuHighFreqContainer)
}

void RsuHighFreqContainer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RsuHighFreqContainer::~RsuHighFreqContainer() {
  // @@protoc_insertion_point(destructor:its.RsuHighFreqContainer)
  SharedDtor();
}

void RsuHighFreqContainer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RsuHighFreqContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RsuHighFreqContainer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RsuHighFreqContainer_descriptor_;
}

const RsuHighFreqContainer& RsuHighFreqContainer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RsuHighFreqContainer_2eproto();
  return *default_instance_;
}

RsuHighFreqContainer* RsuHighFreqContainer::default_instance_ = NULL;

RsuHighFreqContainer* RsuHighFreqContainer::New() const {
  return new RsuHighFreqContainer;
}

void RsuHighFreqContainer::Clear() {
  protectedcommzone_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RsuHighFreqContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:its.RsuHighFreqContainer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .its.ProtectedCommunicationZone protectedCommZone = 1;
      case 1: {
        if (tag == 10) {
         parse_protectedCommZone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_protectedcommzone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_protectedCommZone;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:its.RsuHighFreqContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:its.RsuHighFreqContainer)
  return false;
#undef DO_
}

void RsuHighFreqContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:its.RsuHighFreqContainer)
  // repeated .its.ProtectedCommunicationZone protectedCommZone = 1;
  for (int i = 0; i < this->protectedcommzone_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->protectedcommzone(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:its.RsuHighFreqContainer)
}

::google::protobuf::uint8* RsuHighFreqContainer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:its.RsuHighFreqContainer)
  // repeated .its.ProtectedCommunicationZone protectedCommZone = 1;
  for (int i = 0; i < this->protectedcommzone_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->protectedcommzone(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:its.RsuHighFreqContainer)
  return target;
}

int RsuHighFreqContainer::ByteSize() const {
  int total_size = 0;

  // repeated .its.ProtectedCommunicationZone protectedCommZone = 1;
  total_size += 1 * this->protectedcommzone_size();
  for (int i = 0; i < this->protectedcommzone_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->protectedcommzone(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RsuHighFreqContainer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RsuHighFreqContainer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RsuHighFreqContainer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RsuHighFreqContainer::MergeFrom(const RsuHighFreqContainer& from) {
  GOOGLE_CHECK_NE(&from, this);
  protectedcommzone_.MergeFrom(from.protectedcommzone_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RsuHighFreqContainer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RsuHighFreqContainer::CopyFrom(const RsuHighFreqContainer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RsuHighFreqContainer::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->protectedcommzone())) return false;
  return true;
}

void RsuHighFreqContainer::Swap(RsuHighFreqContainer* other) {
  if (other != this) {
    protectedcommzone_.Swap(&other->protectedcommzone_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RsuHighFreqContainer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RsuHighFreqContainer_descriptor_;
  metadata.reflection = RsuHighFreqContainer_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace its

// @@protoc_insertion_point(global_scope)
