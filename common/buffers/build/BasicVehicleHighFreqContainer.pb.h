// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BasicVehicleHighFreqContainer.proto

#ifndef PROTOBUF_BasicVehicleHighFreqContainer_2eproto__INCLUDED
#define PROTOBUF_BasicVehicleHighFreqContainer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace its {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BasicVehicleHighFreqContainer_2eproto();
void protobuf_AssignDesc_BasicVehicleHighFreqContainer_2eproto();
void protobuf_ShutdownFile_BasicVehicleHighFreqContainer_2eproto();

class BasicVehicleHighFreqContainer;

// ===================================================================

class BasicVehicleHighFreqContainer : public ::google::protobuf::Message {
 public:
  BasicVehicleHighFreqContainer();
  virtual ~BasicVehicleHighFreqContainer();

  BasicVehicleHighFreqContainer(const BasicVehicleHighFreqContainer& from);

  inline BasicVehicleHighFreqContainer& operator=(const BasicVehicleHighFreqContainer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicVehicleHighFreqContainer& default_instance();

  void Swap(BasicVehicleHighFreqContainer* other);

  // implements Message ----------------------------------------------

  BasicVehicleHighFreqContainer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicVehicleHighFreqContainer& from);
  void MergeFrom(const BasicVehicleHighFreqContainer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 heading = 1;
  inline bool has_heading() const;
  inline void clear_heading();
  static const int kHeadingFieldNumber = 1;
  inline ::google::protobuf::int64 heading() const;
  inline void set_heading(::google::protobuf::int64 value);

  // required int64 headingConfidence = 2;
  inline bool has_headingconfidence() const;
  inline void clear_headingconfidence();
  static const int kHeadingConfidenceFieldNumber = 2;
  inline ::google::protobuf::int64 headingconfidence() const;
  inline void set_headingconfidence(::google::protobuf::int64 value);

  // required int64 speed = 3;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 3;
  inline ::google::protobuf::int64 speed() const;
  inline void set_speed(::google::protobuf::int64 value);

  // required int64 speedConfidence = 4;
  inline bool has_speedconfidence() const;
  inline void clear_speedconfidence();
  static const int kSpeedConfidenceFieldNumber = 4;
  inline ::google::protobuf::int64 speedconfidence() const;
  inline void set_speedconfidence(::google::protobuf::int64 value);

  // required int64 driveDirection = 5;
  inline bool has_drivedirection() const;
  inline void clear_drivedirection();
  static const int kDriveDirectionFieldNumber = 5;
  inline ::google::protobuf::int64 drivedirection() const;
  inline void set_drivedirection(::google::protobuf::int64 value);

  // required int64 vehicleLength = 6;
  inline bool has_vehiclelength() const;
  inline void clear_vehiclelength();
  static const int kVehicleLengthFieldNumber = 6;
  inline ::google::protobuf::int64 vehiclelength() const;
  inline void set_vehiclelength(::google::protobuf::int64 value);

  // required int64 vehicleLengthConfidence = 7;
  inline bool has_vehiclelengthconfidence() const;
  inline void clear_vehiclelengthconfidence();
  static const int kVehicleLengthConfidenceFieldNumber = 7;
  inline ::google::protobuf::int64 vehiclelengthconfidence() const;
  inline void set_vehiclelengthconfidence(::google::protobuf::int64 value);

  // required int64 vehicleWidth = 8;
  inline bool has_vehiclewidth() const;
  inline void clear_vehiclewidth();
  static const int kVehicleWidthFieldNumber = 8;
  inline ::google::protobuf::int64 vehiclewidth() const;
  inline void set_vehiclewidth(::google::protobuf::int64 value);

  // required int64 longitudinalAcceleration = 9;
  inline bool has_longitudinalacceleration() const;
  inline void clear_longitudinalacceleration();
  static const int kLongitudinalAccelerationFieldNumber = 9;
  inline ::google::protobuf::int64 longitudinalacceleration() const;
  inline void set_longitudinalacceleration(::google::protobuf::int64 value);

  // required int64 longitudinalAccelerationConfidence = 10;
  inline bool has_longitudinalaccelerationconfidence() const;
  inline void clear_longitudinalaccelerationconfidence();
  static const int kLongitudinalAccelerationConfidenceFieldNumber = 10;
  inline ::google::protobuf::int64 longitudinalaccelerationconfidence() const;
  inline void set_longitudinalaccelerationconfidence(::google::protobuf::int64 value);

  // required int64 curvature = 11;
  inline bool has_curvature() const;
  inline void clear_curvature();
  static const int kCurvatureFieldNumber = 11;
  inline ::google::protobuf::int64 curvature() const;
  inline void set_curvature(::google::protobuf::int64 value);

  // required int64 curvatureConfidence = 12;
  inline bool has_curvatureconfidence() const;
  inline void clear_curvatureconfidence();
  static const int kCurvatureConfidenceFieldNumber = 12;
  inline ::google::protobuf::int64 curvatureconfidence() const;
  inline void set_curvatureconfidence(::google::protobuf::int64 value);

  // required int64 curvatureCalcMode = 13;
  inline bool has_curvaturecalcmode() const;
  inline void clear_curvaturecalcmode();
  static const int kCurvatureCalcModeFieldNumber = 13;
  inline ::google::protobuf::int64 curvaturecalcmode() const;
  inline void set_curvaturecalcmode(::google::protobuf::int64 value);

  // required int64 yawRate = 14;
  inline bool has_yawrate() const;
  inline void clear_yawrate();
  static const int kYawRateFieldNumber = 14;
  inline ::google::protobuf::int64 yawrate() const;
  inline void set_yawrate(::google::protobuf::int64 value);

  // required int64 yawRateConfidence = 15;
  inline bool has_yawrateconfidence() const;
  inline void clear_yawrateconfidence();
  static const int kYawRateConfidenceFieldNumber = 15;
  inline ::google::protobuf::int64 yawrateconfidence() const;
  inline void set_yawrateconfidence(::google::protobuf::int64 value);

  // optional int64 accelerationControl = 16;
  inline bool has_accelerationcontrol() const;
  inline void clear_accelerationcontrol();
  static const int kAccelerationControlFieldNumber = 16;
  inline ::google::protobuf::int64 accelerationcontrol() const;
  inline void set_accelerationcontrol(::google::protobuf::int64 value);

  // optional int64 lanePosition = 17;
  inline bool has_laneposition() const;
  inline void clear_laneposition();
  static const int kLanePositionFieldNumber = 17;
  inline ::google::protobuf::int64 laneposition() const;
  inline void set_laneposition(::google::protobuf::int64 value);

  // optional int64 steeringWheelAngle = 18;
  inline bool has_steeringwheelangle() const;
  inline void clear_steeringwheelangle();
  static const int kSteeringWheelAngleFieldNumber = 18;
  inline ::google::protobuf::int64 steeringwheelangle() const;
  inline void set_steeringwheelangle(::google::protobuf::int64 value);

  // optional int64 steeringWheelAngleConfidence = 19;
  inline bool has_steeringwheelangleconfidence() const;
  inline void clear_steeringwheelangleconfidence();
  static const int kSteeringWheelAngleConfidenceFieldNumber = 19;
  inline ::google::protobuf::int64 steeringwheelangleconfidence() const;
  inline void set_steeringwheelangleconfidence(::google::protobuf::int64 value);

  // optional int64 lateralAcceleration = 20;
  inline bool has_lateralacceleration() const;
  inline void clear_lateralacceleration();
  static const int kLateralAccelerationFieldNumber = 20;
  inline ::google::protobuf::int64 lateralacceleration() const;
  inline void set_lateralacceleration(::google::protobuf::int64 value);

  // optional int64 lateralAccelerationConfidence = 21;
  inline bool has_lateralaccelerationconfidence() const;
  inline void clear_lateralaccelerationconfidence();
  static const int kLateralAccelerationConfidenceFieldNumber = 21;
  inline ::google::protobuf::int64 lateralaccelerationconfidence() const;
  inline void set_lateralaccelerationconfidence(::google::protobuf::int64 value);

  // optional int64 verticalAcceleration = 22;
  inline bool has_verticalacceleration() const;
  inline void clear_verticalacceleration();
  static const int kVerticalAccelerationFieldNumber = 22;
  inline ::google::protobuf::int64 verticalacceleration() const;
  inline void set_verticalacceleration(::google::protobuf::int64 value);

  // optional int64 verticalAccelerationConfidence = 23;
  inline bool has_verticalaccelerationconfidence() const;
  inline void clear_verticalaccelerationconfidence();
  static const int kVerticalAccelerationConfidenceFieldNumber = 23;
  inline ::google::protobuf::int64 verticalaccelerationconfidence() const;
  inline void set_verticalaccelerationconfidence(::google::protobuf::int64 value);

  // optional int64 performanceClass = 24;
  inline bool has_performanceclass() const;
  inline void clear_performanceclass();
  static const int kPerformanceClassFieldNumber = 24;
  inline ::google::protobuf::int64 performanceclass() const;
  inline void set_performanceclass(::google::protobuf::int64 value);

  // optional int64 protectedZoneLatitude = 25;
  inline bool has_protectedzonelatitude() const;
  inline void clear_protectedzonelatitude();
  static const int kProtectedZoneLatitudeFieldNumber = 25;
  inline ::google::protobuf::int64 protectedzonelatitude() const;
  inline void set_protectedzonelatitude(::google::protobuf::int64 value);

  // optional int64 protectedZoneLongitude = 26;
  inline bool has_protectedzonelongitude() const;
  inline void clear_protectedzonelongitude();
  static const int kProtectedZoneLongitudeFieldNumber = 26;
  inline ::google::protobuf::int64 protectedzonelongitude() const;
  inline void set_protectedzonelongitude(::google::protobuf::int64 value);

  // optional int64 cenDsrcTollingZoneId = 27;
  inline bool has_cendsrctollingzoneid() const;
  inline void clear_cendsrctollingzoneid();
  static const int kCenDsrcTollingZoneIdFieldNumber = 27;
  inline ::google::protobuf::int64 cendsrctollingzoneid() const;
  inline void set_cendsrctollingzoneid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:its.BasicVehicleHighFreqContainer)
 private:
  inline void set_has_heading();
  inline void clear_has_heading();
  inline void set_has_headingconfidence();
  inline void clear_has_headingconfidence();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_speedconfidence();
  inline void clear_has_speedconfidence();
  inline void set_has_drivedirection();
  inline void clear_has_drivedirection();
  inline void set_has_vehiclelength();
  inline void clear_has_vehiclelength();
  inline void set_has_vehiclelengthconfidence();
  inline void clear_has_vehiclelengthconfidence();
  inline void set_has_vehiclewidth();
  inline void clear_has_vehiclewidth();
  inline void set_has_longitudinalacceleration();
  inline void clear_has_longitudinalacceleration();
  inline void set_has_longitudinalaccelerationconfidence();
  inline void clear_has_longitudinalaccelerationconfidence();
  inline void set_has_curvature();
  inline void clear_has_curvature();
  inline void set_has_curvatureconfidence();
  inline void clear_has_curvatureconfidence();
  inline void set_has_curvaturecalcmode();
  inline void clear_has_curvaturecalcmode();
  inline void set_has_yawrate();
  inline void clear_has_yawrate();
  inline void set_has_yawrateconfidence();
  inline void clear_has_yawrateconfidence();
  inline void set_has_accelerationcontrol();
  inline void clear_has_accelerationcontrol();
  inline void set_has_laneposition();
  inline void clear_has_laneposition();
  inline void set_has_steeringwheelangle();
  inline void clear_has_steeringwheelangle();
  inline void set_has_steeringwheelangleconfidence();
  inline void clear_has_steeringwheelangleconfidence();
  inline void set_has_lateralacceleration();
  inline void clear_has_lateralacceleration();
  inline void set_has_lateralaccelerationconfidence();
  inline void clear_has_lateralaccelerationconfidence();
  inline void set_has_verticalacceleration();
  inline void clear_has_verticalacceleration();
  inline void set_has_verticalaccelerationconfidence();
  inline void clear_has_verticalaccelerationconfidence();
  inline void set_has_performanceclass();
  inline void clear_has_performanceclass();
  inline void set_has_protectedzonelatitude();
  inline void clear_has_protectedzonelatitude();
  inline void set_has_protectedzonelongitude();
  inline void clear_has_protectedzonelongitude();
  inline void set_has_cendsrctollingzoneid();
  inline void clear_has_cendsrctollingzoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 heading_;
  ::google::protobuf::int64 headingconfidence_;
  ::google::protobuf::int64 speed_;
  ::google::protobuf::int64 speedconfidence_;
  ::google::protobuf::int64 drivedirection_;
  ::google::protobuf::int64 vehiclelength_;
  ::google::protobuf::int64 vehiclelengthconfidence_;
  ::google::protobuf::int64 vehiclewidth_;
  ::google::protobuf::int64 longitudinalacceleration_;
  ::google::protobuf::int64 longitudinalaccelerationconfidence_;
  ::google::protobuf::int64 curvature_;
  ::google::protobuf::int64 curvatureconfidence_;
  ::google::protobuf::int64 curvaturecalcmode_;
  ::google::protobuf::int64 yawrate_;
  ::google::protobuf::int64 yawrateconfidence_;
  ::google::protobuf::int64 accelerationcontrol_;
  ::google::protobuf::int64 laneposition_;
  ::google::protobuf::int64 steeringwheelangle_;
  ::google::protobuf::int64 steeringwheelangleconfidence_;
  ::google::protobuf::int64 lateralacceleration_;
  ::google::protobuf::int64 lateralaccelerationconfidence_;
  ::google::protobuf::int64 verticalacceleration_;
  ::google::protobuf::int64 verticalaccelerationconfidence_;
  ::google::protobuf::int64 performanceclass_;
  ::google::protobuf::int64 protectedzonelatitude_;
  ::google::protobuf::int64 protectedzonelongitude_;
  ::google::protobuf::int64 cendsrctollingzoneid_;
  friend void  protobuf_AddDesc_BasicVehicleHighFreqContainer_2eproto();
  friend void protobuf_AssignDesc_BasicVehicleHighFreqContainer_2eproto();
  friend void protobuf_ShutdownFile_BasicVehicleHighFreqContainer_2eproto();

  void InitAsDefaultInstance();
  static BasicVehicleHighFreqContainer* default_instance_;
};
// ===================================================================


// ===================================================================

// BasicVehicleHighFreqContainer

// required int64 heading = 1;
inline bool BasicVehicleHighFreqContainer::has_heading() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_heading() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicVehicleHighFreqContainer::clear_has_heading() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicVehicleHighFreqContainer::clear_heading() {
  heading_ = GOOGLE_LONGLONG(0);
  clear_has_heading();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::heading() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.heading)
  return heading_;
}
inline void BasicVehicleHighFreqContainer::set_heading(::google::protobuf::int64 value) {
  set_has_heading();
  heading_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.heading)
}

// required int64 headingConfidence = 2;
inline bool BasicVehicleHighFreqContainer::has_headingconfidence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_headingconfidence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicVehicleHighFreqContainer::clear_has_headingconfidence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicVehicleHighFreqContainer::clear_headingconfidence() {
  headingconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_headingconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::headingconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.headingConfidence)
  return headingconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_headingconfidence(::google::protobuf::int64 value) {
  set_has_headingconfidence();
  headingconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.headingConfidence)
}

// required int64 speed = 3;
inline bool BasicVehicleHighFreqContainer::has_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicVehicleHighFreqContainer::clear_has_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicVehicleHighFreqContainer::clear_speed() {
  speed_ = GOOGLE_LONGLONG(0);
  clear_has_speed();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::speed() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.speed)
  return speed_;
}
inline void BasicVehicleHighFreqContainer::set_speed(::google::protobuf::int64 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.speed)
}

// required int64 speedConfidence = 4;
inline bool BasicVehicleHighFreqContainer::has_speedconfidence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_speedconfidence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicVehicleHighFreqContainer::clear_has_speedconfidence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicVehicleHighFreqContainer::clear_speedconfidence() {
  speedconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_speedconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::speedconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.speedConfidence)
  return speedconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_speedconfidence(::google::protobuf::int64 value) {
  set_has_speedconfidence();
  speedconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.speedConfidence)
}

// required int64 driveDirection = 5;
inline bool BasicVehicleHighFreqContainer::has_drivedirection() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_drivedirection() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicVehicleHighFreqContainer::clear_has_drivedirection() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicVehicleHighFreqContainer::clear_drivedirection() {
  drivedirection_ = GOOGLE_LONGLONG(0);
  clear_has_drivedirection();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::drivedirection() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.driveDirection)
  return drivedirection_;
}
inline void BasicVehicleHighFreqContainer::set_drivedirection(::google::protobuf::int64 value) {
  set_has_drivedirection();
  drivedirection_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.driveDirection)
}

// required int64 vehicleLength = 6;
inline bool BasicVehicleHighFreqContainer::has_vehiclelength() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_vehiclelength() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicVehicleHighFreqContainer::clear_has_vehiclelength() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicVehicleHighFreqContainer::clear_vehiclelength() {
  vehiclelength_ = GOOGLE_LONGLONG(0);
  clear_has_vehiclelength();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::vehiclelength() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.vehicleLength)
  return vehiclelength_;
}
inline void BasicVehicleHighFreqContainer::set_vehiclelength(::google::protobuf::int64 value) {
  set_has_vehiclelength();
  vehiclelength_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.vehicleLength)
}

// required int64 vehicleLengthConfidence = 7;
inline bool BasicVehicleHighFreqContainer::has_vehiclelengthconfidence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_vehiclelengthconfidence() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicVehicleHighFreqContainer::clear_has_vehiclelengthconfidence() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicVehicleHighFreqContainer::clear_vehiclelengthconfidence() {
  vehiclelengthconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_vehiclelengthconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::vehiclelengthconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.vehicleLengthConfidence)
  return vehiclelengthconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_vehiclelengthconfidence(::google::protobuf::int64 value) {
  set_has_vehiclelengthconfidence();
  vehiclelengthconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.vehicleLengthConfidence)
}

// required int64 vehicleWidth = 8;
inline bool BasicVehicleHighFreqContainer::has_vehiclewidth() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_vehiclewidth() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BasicVehicleHighFreqContainer::clear_has_vehiclewidth() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BasicVehicleHighFreqContainer::clear_vehiclewidth() {
  vehiclewidth_ = GOOGLE_LONGLONG(0);
  clear_has_vehiclewidth();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::vehiclewidth() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.vehicleWidth)
  return vehiclewidth_;
}
inline void BasicVehicleHighFreqContainer::set_vehiclewidth(::google::protobuf::int64 value) {
  set_has_vehiclewidth();
  vehiclewidth_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.vehicleWidth)
}

// required int64 longitudinalAcceleration = 9;
inline bool BasicVehicleHighFreqContainer::has_longitudinalacceleration() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_longitudinalacceleration() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BasicVehicleHighFreqContainer::clear_has_longitudinalacceleration() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BasicVehicleHighFreqContainer::clear_longitudinalacceleration() {
  longitudinalacceleration_ = GOOGLE_LONGLONG(0);
  clear_has_longitudinalacceleration();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::longitudinalacceleration() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.longitudinalAcceleration)
  return longitudinalacceleration_;
}
inline void BasicVehicleHighFreqContainer::set_longitudinalacceleration(::google::protobuf::int64 value) {
  set_has_longitudinalacceleration();
  longitudinalacceleration_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.longitudinalAcceleration)
}

// required int64 longitudinalAccelerationConfidence = 10;
inline bool BasicVehicleHighFreqContainer::has_longitudinalaccelerationconfidence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_longitudinalaccelerationconfidence() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BasicVehicleHighFreqContainer::clear_has_longitudinalaccelerationconfidence() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BasicVehicleHighFreqContainer::clear_longitudinalaccelerationconfidence() {
  longitudinalaccelerationconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_longitudinalaccelerationconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::longitudinalaccelerationconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.longitudinalAccelerationConfidence)
  return longitudinalaccelerationconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_longitudinalaccelerationconfidence(::google::protobuf::int64 value) {
  set_has_longitudinalaccelerationconfidence();
  longitudinalaccelerationconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.longitudinalAccelerationConfidence)
}

// required int64 curvature = 11;
inline bool BasicVehicleHighFreqContainer::has_curvature() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_curvature() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BasicVehicleHighFreqContainer::clear_has_curvature() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BasicVehicleHighFreqContainer::clear_curvature() {
  curvature_ = GOOGLE_LONGLONG(0);
  clear_has_curvature();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::curvature() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.curvature)
  return curvature_;
}
inline void BasicVehicleHighFreqContainer::set_curvature(::google::protobuf::int64 value) {
  set_has_curvature();
  curvature_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.curvature)
}

// required int64 curvatureConfidence = 12;
inline bool BasicVehicleHighFreqContainer::has_curvatureconfidence() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_curvatureconfidence() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BasicVehicleHighFreqContainer::clear_has_curvatureconfidence() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BasicVehicleHighFreqContainer::clear_curvatureconfidence() {
  curvatureconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_curvatureconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::curvatureconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.curvatureConfidence)
  return curvatureconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_curvatureconfidence(::google::protobuf::int64 value) {
  set_has_curvatureconfidence();
  curvatureconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.curvatureConfidence)
}

// required int64 curvatureCalcMode = 13;
inline bool BasicVehicleHighFreqContainer::has_curvaturecalcmode() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_curvaturecalcmode() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_curvaturecalcmode() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BasicVehicleHighFreqContainer::clear_curvaturecalcmode() {
  curvaturecalcmode_ = GOOGLE_LONGLONG(0);
  clear_has_curvaturecalcmode();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::curvaturecalcmode() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.curvatureCalcMode)
  return curvaturecalcmode_;
}
inline void BasicVehicleHighFreqContainer::set_curvaturecalcmode(::google::protobuf::int64 value) {
  set_has_curvaturecalcmode();
  curvaturecalcmode_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.curvatureCalcMode)
}

// required int64 yawRate = 14;
inline bool BasicVehicleHighFreqContainer::has_yawrate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_yawrate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_yawrate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BasicVehicleHighFreqContainer::clear_yawrate() {
  yawrate_ = GOOGLE_LONGLONG(0);
  clear_has_yawrate();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::yawrate() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.yawRate)
  return yawrate_;
}
inline void BasicVehicleHighFreqContainer::set_yawrate(::google::protobuf::int64 value) {
  set_has_yawrate();
  yawrate_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.yawRate)
}

// required int64 yawRateConfidence = 15;
inline bool BasicVehicleHighFreqContainer::has_yawrateconfidence() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_yawrateconfidence() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_yawrateconfidence() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BasicVehicleHighFreqContainer::clear_yawrateconfidence() {
  yawrateconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_yawrateconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::yawrateconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.yawRateConfidence)
  return yawrateconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_yawrateconfidence(::google::protobuf::int64 value) {
  set_has_yawrateconfidence();
  yawrateconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.yawRateConfidence)
}

// optional int64 accelerationControl = 16;
inline bool BasicVehicleHighFreqContainer::has_accelerationcontrol() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_accelerationcontrol() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_accelerationcontrol() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BasicVehicleHighFreqContainer::clear_accelerationcontrol() {
  accelerationcontrol_ = GOOGLE_LONGLONG(0);
  clear_has_accelerationcontrol();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::accelerationcontrol() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.accelerationControl)
  return accelerationcontrol_;
}
inline void BasicVehicleHighFreqContainer::set_accelerationcontrol(::google::protobuf::int64 value) {
  set_has_accelerationcontrol();
  accelerationcontrol_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.accelerationControl)
}

// optional int64 lanePosition = 17;
inline bool BasicVehicleHighFreqContainer::has_laneposition() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_laneposition() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_laneposition() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BasicVehicleHighFreqContainer::clear_laneposition() {
  laneposition_ = GOOGLE_LONGLONG(0);
  clear_has_laneposition();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::laneposition() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.lanePosition)
  return laneposition_;
}
inline void BasicVehicleHighFreqContainer::set_laneposition(::google::protobuf::int64 value) {
  set_has_laneposition();
  laneposition_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.lanePosition)
}

// optional int64 steeringWheelAngle = 18;
inline bool BasicVehicleHighFreqContainer::has_steeringwheelangle() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_steeringwheelangle() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_steeringwheelangle() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BasicVehicleHighFreqContainer::clear_steeringwheelangle() {
  steeringwheelangle_ = GOOGLE_LONGLONG(0);
  clear_has_steeringwheelangle();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::steeringwheelangle() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.steeringWheelAngle)
  return steeringwheelangle_;
}
inline void BasicVehicleHighFreqContainer::set_steeringwheelangle(::google::protobuf::int64 value) {
  set_has_steeringwheelangle();
  steeringwheelangle_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.steeringWheelAngle)
}

// optional int64 steeringWheelAngleConfidence = 19;
inline bool BasicVehicleHighFreqContainer::has_steeringwheelangleconfidence() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_steeringwheelangleconfidence() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_steeringwheelangleconfidence() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BasicVehicleHighFreqContainer::clear_steeringwheelangleconfidence() {
  steeringwheelangleconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_steeringwheelangleconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::steeringwheelangleconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.steeringWheelAngleConfidence)
  return steeringwheelangleconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_steeringwheelangleconfidence(::google::protobuf::int64 value) {
  set_has_steeringwheelangleconfidence();
  steeringwheelangleconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.steeringWheelAngleConfidence)
}

// optional int64 lateralAcceleration = 20;
inline bool BasicVehicleHighFreqContainer::has_lateralacceleration() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_lateralacceleration() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_lateralacceleration() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BasicVehicleHighFreqContainer::clear_lateralacceleration() {
  lateralacceleration_ = GOOGLE_LONGLONG(0);
  clear_has_lateralacceleration();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::lateralacceleration() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.lateralAcceleration)
  return lateralacceleration_;
}
inline void BasicVehicleHighFreqContainer::set_lateralacceleration(::google::protobuf::int64 value) {
  set_has_lateralacceleration();
  lateralacceleration_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.lateralAcceleration)
}

// optional int64 lateralAccelerationConfidence = 21;
inline bool BasicVehicleHighFreqContainer::has_lateralaccelerationconfidence() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_lateralaccelerationconfidence() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_lateralaccelerationconfidence() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BasicVehicleHighFreqContainer::clear_lateralaccelerationconfidence() {
  lateralaccelerationconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_lateralaccelerationconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::lateralaccelerationconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.lateralAccelerationConfidence)
  return lateralaccelerationconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_lateralaccelerationconfidence(::google::protobuf::int64 value) {
  set_has_lateralaccelerationconfidence();
  lateralaccelerationconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.lateralAccelerationConfidence)
}

// optional int64 verticalAcceleration = 22;
inline bool BasicVehicleHighFreqContainer::has_verticalacceleration() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_verticalacceleration() {
  _has_bits_[0] |= 0x00200000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_verticalacceleration() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void BasicVehicleHighFreqContainer::clear_verticalacceleration() {
  verticalacceleration_ = GOOGLE_LONGLONG(0);
  clear_has_verticalacceleration();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::verticalacceleration() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.verticalAcceleration)
  return verticalacceleration_;
}
inline void BasicVehicleHighFreqContainer::set_verticalacceleration(::google::protobuf::int64 value) {
  set_has_verticalacceleration();
  verticalacceleration_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.verticalAcceleration)
}

// optional int64 verticalAccelerationConfidence = 23;
inline bool BasicVehicleHighFreqContainer::has_verticalaccelerationconfidence() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_verticalaccelerationconfidence() {
  _has_bits_[0] |= 0x00400000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_verticalaccelerationconfidence() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void BasicVehicleHighFreqContainer::clear_verticalaccelerationconfidence() {
  verticalaccelerationconfidence_ = GOOGLE_LONGLONG(0);
  clear_has_verticalaccelerationconfidence();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::verticalaccelerationconfidence() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.verticalAccelerationConfidence)
  return verticalaccelerationconfidence_;
}
inline void BasicVehicleHighFreqContainer::set_verticalaccelerationconfidence(::google::protobuf::int64 value) {
  set_has_verticalaccelerationconfidence();
  verticalaccelerationconfidence_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.verticalAccelerationConfidence)
}

// optional int64 performanceClass = 24;
inline bool BasicVehicleHighFreqContainer::has_performanceclass() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_performanceclass() {
  _has_bits_[0] |= 0x00800000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_performanceclass() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void BasicVehicleHighFreqContainer::clear_performanceclass() {
  performanceclass_ = GOOGLE_LONGLONG(0);
  clear_has_performanceclass();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::performanceclass() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.performanceClass)
  return performanceclass_;
}
inline void BasicVehicleHighFreqContainer::set_performanceclass(::google::protobuf::int64 value) {
  set_has_performanceclass();
  performanceclass_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.performanceClass)
}

// optional int64 protectedZoneLatitude = 25;
inline bool BasicVehicleHighFreqContainer::has_protectedzonelatitude() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_protectedzonelatitude() {
  _has_bits_[0] |= 0x01000000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_protectedzonelatitude() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void BasicVehicleHighFreqContainer::clear_protectedzonelatitude() {
  protectedzonelatitude_ = GOOGLE_LONGLONG(0);
  clear_has_protectedzonelatitude();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::protectedzonelatitude() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.protectedZoneLatitude)
  return protectedzonelatitude_;
}
inline void BasicVehicleHighFreqContainer::set_protectedzonelatitude(::google::protobuf::int64 value) {
  set_has_protectedzonelatitude();
  protectedzonelatitude_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.protectedZoneLatitude)
}

// optional int64 protectedZoneLongitude = 26;
inline bool BasicVehicleHighFreqContainer::has_protectedzonelongitude() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_protectedzonelongitude() {
  _has_bits_[0] |= 0x02000000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_protectedzonelongitude() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void BasicVehicleHighFreqContainer::clear_protectedzonelongitude() {
  protectedzonelongitude_ = GOOGLE_LONGLONG(0);
  clear_has_protectedzonelongitude();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::protectedzonelongitude() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.protectedZoneLongitude)
  return protectedzonelongitude_;
}
inline void BasicVehicleHighFreqContainer::set_protectedzonelongitude(::google::protobuf::int64 value) {
  set_has_protectedzonelongitude();
  protectedzonelongitude_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.protectedZoneLongitude)
}

// optional int64 cenDsrcTollingZoneId = 27;
inline bool BasicVehicleHighFreqContainer::has_cendsrctollingzoneid() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void BasicVehicleHighFreqContainer::set_has_cendsrctollingzoneid() {
  _has_bits_[0] |= 0x04000000u;
}
inline void BasicVehicleHighFreqContainer::clear_has_cendsrctollingzoneid() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void BasicVehicleHighFreqContainer::clear_cendsrctollingzoneid() {
  cendsrctollingzoneid_ = GOOGLE_LONGLONG(0);
  clear_has_cendsrctollingzoneid();
}
inline ::google::protobuf::int64 BasicVehicleHighFreqContainer::cendsrctollingzoneid() const {
  // @@protoc_insertion_point(field_get:its.BasicVehicleHighFreqContainer.cenDsrcTollingZoneId)
  return cendsrctollingzoneid_;
}
inline void BasicVehicleHighFreqContainer::set_cendsrctollingzoneid(::google::protobuf::int64 value) {
  set_has_cendsrctollingzoneid();
  cendsrctollingzoneid_ = value;
  // @@protoc_insertion_point(field_set:its.BasicVehicleHighFreqContainer.cenDsrcTollingZoneId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace its

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BasicVehicleHighFreqContainer_2eproto__INCLUDED
